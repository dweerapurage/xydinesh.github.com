<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Things overheard, thoughts and tech</title><link href="http://weerapurage.org/" rel="alternate"></link><link href="http://weerapurage.org/feeds/Tech.atom.xml" rel="self"></link><id>http://weerapurage.org/</id><updated>2013-01-30T00:00:00-05:00</updated><entry><title>Edit Large Files</title><link href="http://weerapurage.org/posts/2013/Jan/30/edit-large-files/" rel="alternate"></link><updated>2013-01-30T00:00:00-05:00</updated><author><name>Dinesh Weerapurage</name></author><id>tag:weerapurage.org,2013-01-30:posts/2013/Jan/30/edit-large-files/</id><summary type="html">&lt;p&gt;Few weeks ago, I split a large file (&lt;span class="caps"&gt;30GB&lt;/span&gt;, text file) into smaller files (&lt;span class="caps"&gt;6GB&lt;/span&gt;) using &lt;tt class="docutils literal"&gt;split&lt;/tt&gt; in order to load in to postgres. However, smaller files had partial lines at the beginning and at the end and postgres &lt;tt class="docutils literal"&gt;copy&lt;/tt&gt; didn&amp;#8217;t like it at all. Removing first and last line was not straight forward as I&amp;nbsp;thought.&lt;/p&gt;
&lt;p&gt;Surprisingly, Nano, Vi and Emacs have failed to handle &lt;span class="caps"&gt;6GB&lt;/span&gt; text file (or I didn&amp;#8217;t have patience to wait for them to finish) and ended up using &lt;tt class="docutils literal"&gt;awk&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;head&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="remove-first-n-lines"&gt;
&lt;h2&gt;Remove First &amp;#8216;n&amp;#8217;&amp;nbsp;lines&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
awk 'NR &amp;gt; n' BigFile.txt &amp;gt; BigFile.txt.tmp
mv BigFile.txt.tmp BigFile.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="remove-last-m-lines"&gt;
&lt;h2&gt;Remove Last &amp;#8216;m&amp;#8217;&amp;nbsp;lines&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
head -n -m BigFile.txt &amp;gt; BigFile.txt.tmp
mv BigFile.txt.tmp BigFile.txt
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="linux"></category><category term="awk"></category><category term="head"></category></entry><entry><title>Install ‘Fabric’ on Windows</title><link href="http://weerapurage.org/posts/2012/Dec/07/install-fabric-on-windows/" rel="alternate"></link><updated>2012-12-07T00:00:00-05:00</updated><author><name>Dinesh Weerapurage</name></author><id>tag:weerapurage.org,2012-12-07:posts/2012/Dec/07/install-fabric-on-windows/</id><summary type="html">&lt;div class="section" id="easy"&gt;
&lt;h2&gt;Easy&lt;/h2&gt;
&lt;p&gt;If it works, pretty easy to do with&amp;nbsp;pip&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$pip install fabric
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="trouble"&gt;
&lt;h2&gt;Trouble&lt;/h2&gt;
&lt;p&gt;Trouble started when I got an error while installing fabric on
windows. Error seems to come from building pycrypto&amp;nbsp;library.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
running build_ext
building 'Crypto.Random.OSRNG.winrandom' extension
warning: GMP or MPIR library not found; Not building Crypto.PublicKey._fastmath.

error: Unable to find vcvarsall.bat
&lt;/pre&gt;
&lt;p&gt;After scrolling through few webpages found a solution on &lt;a class="reference external" href="http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat"&gt;StackOverFlow&lt;/a&gt; where it suggests to do&amp;nbsp;following&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;SET VS90COMNTOOLS=%VS100COMNTOOLS%
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;SET VS90COMNTOOLS=%VS110COMNTOOLS%
&lt;/pre&gt;
&lt;p&gt;Depending on your &lt;span class="caps"&gt;VS&lt;/span&gt; installation, and&amp;nbsp;then&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$pip install fabric
&lt;/pre&gt;
&lt;p&gt;It gives following error, Argh&amp;nbsp;!&lt;/p&gt;
&lt;pre class="literal-block"&gt;
build\temp.win32-2.7\Release\src\winrandom.pyd.manifest : general error c1010070
: Failed to load and parse the manifest. The system cannot find the file specifi
ed.
warning: GMP or MPIR library not found; Not building Crypto.PublicKey._fastmath.

error: command 'mt.exe' failed with exit status 31
&lt;/pre&gt;
&lt;p&gt;Again after scrolling few pages, found an answer on &lt;a class="reference external" href="http://fuyun.org/2009/12/install-mysql-for-python-on-windows/"&gt;fuyun&lt;/a&gt; &amp;#8216;s&amp;nbsp;website.&lt;/p&gt;
&lt;p&gt;For the sake of completeness, I have quoted his/her&amp;nbsp;solution.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Now try to build it again. I got this error:

buildtemp.win32-2.6Release_mysql.pyd.manifest : general error
c1010070: Failed to load and parse the manifest.
The system cannot find  the file specified.

error: command ‘mt.exe’ failed with exit status 31

To fix this problem, go to C:\Python2.6\Lib\distutils,
edit msvc9compiler.py, search for ‘MANIFESTFILE’, you will find the following line

ld_args.append(‘/MANIFESTFILE:’ + temp_manifest)

Then append the following line after the above line,

ld_args.append(‘/MANIFEST’)
&lt;/pre&gt;
&lt;p&gt;then&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$pip install fabric

Creating library build\temp.win32-2.7\Release\src\_counter.lib and object
build\temp.win32-2.7\Release\src\_counter.exp
 C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin\mt.exe -nologo -mani
 fest build\temp.win32-2.7\Release\src\_counter.pyd.manifest -outputresource:buil
 d\lib.win32-2.7\Crypto\Util\_counter.pyd;2
 warning: GMP or MPIR library not found; Not building Crypto.PublicKey._fastm
 ath.

 Successfully installed pycrypto
 Cleaning up...
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="fabric"></category><category term="windows"></category><category term="pip"></category><category term="pycrypto"></category></entry><entry><title>Video Embedding</title><link href="http://weerapurage.org/posts/2012/Dec/06/video-embedding/" rel="alternate"></link><updated>2012-12-06T00:00:00-05:00</updated><author><name>Dinesh Weerapurage</name></author><id>tag:weerapurage.org,2012-12-06:posts/2012/Dec/06/video-embedding/</id><summary type="html">&lt;p&gt;Nice, there is a &amp;#8221;.. youtube::&amp;#8221; derective to embed youtube video with rst. In here, &lt;a class="reference external" href="http://countergram.com/youtube-in-rst"&gt;youtube&lt;/a&gt; directive is discussed in&amp;nbsp;detail.&lt;/p&gt;
&lt;div class="youtube" align="left"&gt;&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/2_2lGkEU4Xs" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary><category term="python"></category><category term="rst"></category></entry><entry><title>Pelican</title><link href="http://weerapurage.org/posts/2012/Dec/05/pelican/" rel="alternate"></link><updated>2012-12-05T00:00:00-05:00</updated><author><name>Dinesh Weerapurage</name></author><id>tag:weerapurage.org,2012-12-05:posts/2012/Dec/05/pelican/</id><summary type="html">&lt;div class="section" id="experience"&gt;
&lt;h2&gt;Experience&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.1.1/"&gt;Pelican&lt;/a&gt; is a nice library for generating websites where you can use &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reST&lt;/a&gt; to write html pages.
Primarily, I choose to use pelican because I can use emacs to write reST pages and rst is painless
to write compared to plain old html. In this post, write my experience of getting this site up and running with pelican.
Hopefully, it will help someone like me to get started on using pelican.
Since this is my first few iterations with pelican settings file looks primitive. Please feel free to send along suggestions for&amp;nbsp;improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install"&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;Once pip installed straight forward to install&amp;nbsp;&amp;#8216;pelican&amp;#8217;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install pelican
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="settings-file"&gt;
&lt;h2&gt;Settings&amp;nbsp;file&lt;/h2&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="comment"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;AUTHOR&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'Dinesh Weerapurage'&lt;/span&gt;
&lt;span class="name"&gt;AUTHOR_SAVE_AS&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="name builtin pseudo"&gt;False&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;SITENAME&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'Overheards, thoughts and tech'&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;SITEURL&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'http://weerapurage.org'&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;TIMEZONE&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'&lt;span class="caps"&gt;US&lt;/span&gt;/Eastern'&lt;/span&gt;

&lt;span class="name"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'https://github.com/xydinesh/xydinesh.github.com'&lt;/span&gt;

&lt;span class="name"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;&amp;quot;weerapurageorg&amp;quot;&lt;/span&gt;
&lt;span class="name"&gt;PDF_GENERATOR&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="name builtin pseudo"&gt;False&lt;/span&gt;
&lt;span class="name"&gt;REVERSE_CATEGORY_ORDER&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="name builtin pseudo"&gt;True&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;LOCALE&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;
&lt;span class="name"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal number integer"&gt;4&lt;/span&gt;
&lt;span class="name"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'feeds/all.rss.xml'&lt;/span&gt;
&lt;span class="name"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'feeds/&lt;/span&gt;&lt;span class="literal string interpol"&gt;%s&lt;/span&gt;&lt;span class="literal string"&gt;.rss.xml'&lt;/span&gt;

&lt;span class="name"&gt;&lt;span class="caps"&gt;SOCIAL&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="punctuation"&gt;((&lt;/span&gt;&lt;span class="literal string"&gt;'twitter'&lt;/span&gt;&lt;span class="punctuation"&gt;,&lt;/span&gt; &lt;span class="literal string"&gt;'http://twitter.com/xydinesh'&lt;/span&gt;&lt;span class="punctuation"&gt;),&lt;/span&gt;
      &lt;span class="punctuation"&gt;(&lt;/span&gt;&lt;span class="literal string"&gt;'github'&lt;/span&gt;&lt;span class="punctuation"&gt;,&lt;/span&gt; &lt;span class="literal string"&gt;'http://github.com/xydinesh'&lt;/span&gt;&lt;span class="punctuation"&gt;),)&lt;/span&gt;

&lt;span class="comment"&gt;# global metadata to all the contents&lt;/span&gt;
&lt;span class="name"&gt;DEFAULT_METADATA&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="punctuation"&gt;((&lt;/span&gt;&lt;span class="literal string"&gt;'yeah'&lt;/span&gt;&lt;span class="punctuation"&gt;,&lt;/span&gt; &lt;span class="literal string"&gt;'it is'&lt;/span&gt;&lt;span class="punctuation"&gt;),)&lt;/span&gt;
&lt;span class="comment"&gt;# Default theme&lt;/span&gt;
&lt;span class="name"&gt;&lt;span class="caps"&gt;THEME&lt;/span&gt;&lt;/span&gt; &lt;span class="operator"&gt;=&lt;/span&gt; &lt;span class="literal string"&gt;'notmyidea'&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="themes"&gt;
&lt;h2&gt;Themes&lt;/h2&gt;
&lt;p&gt;There are good number of pelicen &lt;a class="reference external" href="https://github.com/getpelican/pelican-themes"&gt;themes&lt;/a&gt; available on github where you can fork/clone them and use.
Just need to modify settings file (which I called&amp;nbsp;settings.py)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
THEME = '../pelican-themes/notmyidea-cms'
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="pelican"></category><category term="python"></category><category term="rst"></category></entry></feed>